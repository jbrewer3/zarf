kind: ZarfPackageConfig
metadata:
  name: component-actions
  description: "Component actions examples"

variables:
  - name: DOG_SOUND
    default: ruff

# See the example README.md in this folder or /adrs/0010-scripts-actions.md for more info.
components:
  - name: on-create
    actions:
      # runs during "zarf package create"
      onCreate:
        # defaults are applied to all actions in this actionSet
        defaults:
          dir: ""
          env: []
          maxRetries: 0
          maxTotalSeconds: 30
        # runs before the component is created
        before:
          # on Windows, touch is replaced with New-Item
          - cmd: touch test-create-before.txt
            # dir is the directory to run the command in
            dir: ""
            # this environment variable will be set for this action only
            env:
              - "thing=stuff"
            # the number of times to retry the action if it fails
            maxRetries: 0
            # the maximum amount of times the action can run before it is killed, including retries
            maxTotalSeconds: 30
            # determine if actions output should be printed to the console
            mute: false
            # the name of the variable to set with the output of the action
            setVariable: BLEH
        # runs after the component is deployed
        after:
          - cmd: touch test-create-after.txt

  - name: on-deploy
    actions:
      # runs during "zarf package deploy"
      onDeploy:
        # runs before the component is deployed
        before:
          - cmd: touch test-deploy-before.txt
        # runs after the component is deployed
        after:
          - cmd: touch test-deploy-after.txt

  - name: on-deploy-with-variable
    actions:
      # runs during "zarf package deploy"
      onDeploy:
        # runs before the component is deployed
        before:
          - cmd: echo "the dog says ${ZARF_VAR_DOG_SOUND}"

  - name: on-deploy-with-dynamic-variable
    actions:
      # runs during "zarf package deploy"
      onDeploy:
        # runs before the component is deployed
        before:
          # setVariable can be used to set a variable for use in other actions or components
          - cmd: echo "meow"
            setVariable: CAT_SOUND
          # this action will have access to the variable set in the previous action
          - cmd: echo "the cat says ${ZARF_VAR_CAT_SOUND}"

  - name: on-deploy-with-multiple-variables
    actions:
      # runs during "zarf package deploy"
      onDeploy:
        # runs before the component is deployed
        before:
          # setting this variable will allow it to be used in other actions with additional variables
          # set in other actions or components
          - cmd: echo "hiss"
            setVariable: SNAKE_SOUND
        # onSuccess will only run if steps in this component are successful
        onSuccess:
          # this action will have access to the variables set in a previous component
          - cmd: echo "the cat says ${ZARF_VAR_CAT_SOUND}"
          # this action will have access to the variables set at the top of the zarf.yaml file
          - cmd: echo "the dog says ${ZARF_VAR_DOG_SOUND}"
          # this action will have access to the variables set within this component
          - cmd: echo "the snake says ${ZARF_VAR_SNAKE_SOUND}"
          # variables are also exposed as TF_VAR_name for terraform, note the lowercase variable name
          - cmd: echo "with a TF_VAR, the snake also says ${TF_VAR_snake_sound}"

  - name: on-deploy-with-template-use-of-variable
    files:
      # this file will be copied to the target location and the cat, dog, and snake sounds will be replaced with their values
      # requires the on-deploy-with-dynamic-variable and on-deploy-with-multiple-variables components
      - source: test.txt
        target: templated.txt

  - name: on-deploy-with-timeout
    description: This component will fail after 1 second
    actions:
      # runs during "zarf package deploy"
      onDeploy:
        # defaults allow you to specify default values for the actions in that acitonSet
        defaults:
          # maxTotalSeconds is the maximum amount of time the action can run before it is killed, including retries
          maxTotalSeconds: 1
          # maxRetries is the maximum number of times the action will be retried on failure
          maxRetries: 3
        before:
          # this action will fail after 1 second
          - cmd: sleep 30
        onFailure:
          - cmd: echo "ðŸ˜­ðŸ˜­ðŸ˜­ this action failed because it took too long to run ðŸ˜­ðŸ˜­ðŸ˜­"

  - name: on-remove
    # A manifest so we can test the onRemove action
    manifests:
      - name: test-configmap
        files:
          - "test-configmap.yaml"
    actions:
      # runs during "zarf package remove"
      onRemove:
        before:
          - cmd: touch test-remove-before.txt
        after:
          - cmd: touch test-remove-after.txt

  - name: on-deploy-with-env-var
    actions:
      onDeploy:
        before:
          - cmd: touch $ZARF_VAR_TEST_FILENAME
            env:
              - "ZARF_VAR_TEST_FILENAME=filename-from-env.txt"
